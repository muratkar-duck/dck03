'use client';

import { useEffect, useState } from 'react';
import AuthGuard from '@/components/AuthGuard';
import { supabase } from '@/lib/supabaseClient';

type ApplicationRow = {
  application_id: string;
  status: string;
  created_at: string;
  request_id: string;
  request_title: string;
  script_id: string;
  script_title: string;
  script_genre: string;
  script_length: string | null; // length kolonunu string'e Ã§evirip dÃ¶nÃ¼yoruz
};

export default function ProducerApplicationsPage() {
  const [applications, setApplications] = useState<ApplicationRow[]>([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    fetchApplications();
  }, []);

  const fetchApplications = async () => {
    const {
      data: { user },
    } = await supabase.auth.getUser();

    if (!user) {
      setLoading(false);
      return;
    }

    // Join'li veriyi RPC ile Ã§ekiyoruz
    const { data, error } = await supabase.rpc('get_producer_applications', {
      p_producer_id: user.id,
    });

    if (error) {
      console.error('BaÅŸvurular alÄ±namadÄ±:', error.message);
      setApplications([]);
    } else {
      setApplications((data as ApplicationRow[]) || []);
    }

    setLoading(false);
  };

  const getBadge = (status: string) => {
    if (status === 'accepted')
      return (
        <span className="bg-green-200 text-green-800 text-xs px-2 py-1 rounded">
          Kabul Edildi
        </span>
      );
    if (status === 'rejected')
      return (
        <span className="bg-red-200 text-red-800 text-xs px-2 py-1 rounded">
          Reddedildi
        </span>
      );
    return (
      <span className="bg-yellow-100 text-yellow-800 text-xs px-2 py-1 rounded">
        Beklemede
      </span>
    );
  };

  return (
    <AuthGuard allowedRoles={['producer']}>
      <div className="space-y-6">
        <h1 className="text-2xl font-bold">ðŸ“© Ä°lanlarÄ±nÄ±za Gelen BaÅŸvurular</h1>
        <p className="text-[#7a5c36]">
          Ä°lanlarÄ±nÄ±za gÃ¶nderilen senaryo baÅŸvurularÄ± burada listelenir.
        </p>

        {loading ? (
          <p className="text-sm text-[#a38d6d]">YÃ¼kleniyor...</p>
        ) : applications.length === 0 ? (
          <p className="text-sm text-[#a38d6d]">
            HenÃ¼z ilanÄ±nÄ±za gelen baÅŸvuru yok.
          </p>
        ) : (
          <div className="space-y-4">
            {applications.map((app) => (
              <div key={app.application_id} className="card">
                <div className="flex justify-between items-start mb-2">
                  <div>
                    <h2 className="text-lg font-semibold">
                      ðŸŽ¬ Senaryo:{' '}
                      <span className="text-[#0e5b4a]">{app.script_title}</span>
                    </h2>
                    <p className="text-sm text-[#7a5c36]">
                      TÃ¼r: {app.script_genre} Â· SÃ¼re:{' '}
                      {app.script_length ? app.script_length : 'â€”'}
                    </p>
                    <p className="text-sm text-[#7a5c36]">
                      Ä°lan: {app.request_title}
                    </p>
                    <p className="text-xs text-[#a38d6d]">
                      BaÅŸvuru:{' '}
                      {new Date(app.created_at).toLocaleString('tr-TR')}
                    </p>
                  </div>
                  {getBadge(app.status)}
                </div>

                <div className="mt-3 flex gap-2">
                  <button className="btn btn-secondary">Mesaj GÃ¶nder</button>
                  <button className="btn btn-primary">DetaylarÄ± GÃ¶r</button>
                </div>
              </div>
            ))}
          </div>
        )}
      </div>
    </AuthGuard>
  );
}
